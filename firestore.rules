service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{uid} {
    	allow get: if
        request.auth.uid != null;
      allow create: if
        request.auth.uid != null &&
      	request.auth.uid == uid &&
      	!exists(request.path) &&
        request.resource.data.keys().hasAll(['name', 'imageUrl']) &&
      	request.resource.data.size() == 2 &&
        request.resource.data.name is string &&
        request.resource.data.imageUrl is string;
        // getAfter(/userProfiles/$(uid)) != null;

      match /friendships/{friendId} {
      	allow list: if
          request.auth.uid == uid;
        allow get;
        allow create;
        	// !exists(request.path) &&
          // request.resource.data.user == (/users/$(friendId)).bind({ "friendId": friendId });
      	// allow delete: if
      	// request.auth.uid == uid;
      	allow delete;
      }
    }
    
    // match /userProfiles/{uid} {
    // 	allow get: if
    //     request.auth.uid != null;
    //   allow create: if
    //     request.auth.uid != null &&
    //     request.auth.uid == uid &&
    //     !exists(request.path) &&
    //     request.resource.data.keys().hasAll(['name', 'imageUrl']) &&
    //     request.resource.data.size() == 2 &&
    //     request.resource.data.name is string &&
    //     request.resource.data.imageUrl is string;
    //     // getAfter(/users/$(uid)) != null;
    // 	allow update: if
    //     request.auth.uid == uid &&
    //   	request.resource.data.keys().hasAny(['name', 'imageUrl']) &&
    //     request.resource.data.size() <= 2 &&
    //     (
    //       request.resource.data.name is string ||
    //       request.resource.data.imageUrl is string
    //     );
    // }
    
    match /friendCodes/{code} {
    	allow get: if
          request.auth.uid != null;
      allow list: if
        request.auth.uid != null;
      allow create: if
        request.auth.uid != null &&
      	request.resource.data.keys().hasAll(['user', 'issuedAt']) &&
      	request.resource.data.size() == 2 &&
        // request.resource.data.user == /databases/$(database)/documents/users/$(request.auth.uid) &&
        request.resource.data.issuedAt is timestamp;
      allow delete: if
        request.auth.uid != null;
    }
    
    match /chats/{id} {
    	allow read, write;
      allow delete;
      
      match /messages/{mid} {
      	allow read, write;
      }
    }
  }
}